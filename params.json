{"body":"# \"To install, drag this icon...\" no more!\r\n\r\nLet's see if we can get the elegance, simplicity, and speed of Homebrew for the\r\ninstallation and management GUI Mac applications like Google Chrome and Adium.\r\n\r\n`brew-cask` provides a friendly homebrew-style CLI workflow for the\r\nadministration of Mac applications distributed as binaries.\r\n\r\nIt's implemented as a `homebrew` \"[external\r\ncommand](https://github.com/mxcl/homebrew/wiki/External-Commands)\" called\r\n`cask`.\r\n\r\n# Let's try it!\r\n\r\n## Get brew-cask\r\n\r\nTap this repository and install the `brew-cask` tool:\r\n\r\n    $ brew tap phinze/homebrew-cask\r\n    $ brew install brew-cask\r\n\r\n## Now let's install our first Cask\r\n\r\nLet's see if there's a Cask for Chrome:\r\n    \r\n    $ brew cask search chrome\r\n    google-chrome\r\n    \r\nCool, there it is.  Let's install it.\r\n\r\n    $ brew cask install google-chrome\r\n    Downloading...\r\n    Success! google-chrome installed to /usr/local/Cellar/google-chrome/stable-channel\r\n\r\nNow we have `Google Chrome.app` in our Cellar. Cool.\r\n\r\nIf you like, it's easy to get it linked somewhere more visible (see [\"Alfred\r\nIntegration\"](#alfred-integration) below for an idea that makes this step\r\nunnecessary):\r\n    \r\n    $ brew cask linkapps\r\n    /Users/phinze/Applications/Google Chrome.app -> /usr/local/Cellar/google-chrome/17.0.963.56/Google Chrome.app\r\n    \r\nAnd there we have it.  Google Chrome installed with a few quick commands; no clicking, no dragging, no dropping.\r\n    \r\n    open \"~/Applications/Google Chrome.app\"\r\n\r\n# What Casks are available?\r\n\r\nJust run `brew cask search` with no arguments to get a list.\r\n\r\n# How do I update brew-cask?\r\n\r\nSince this repository is a Tap, you'll pull down the latest Casks with a simple\r\n`brew-update`. When the `brew-cask` tool itself is updated, it will show in\r\n`brew outdated` and you can upgrade it via the normal Homebrew workflow.\r\n\r\n# What is a Cask?\r\n\r\nA `Cask` is like a `Formula` in Homebrew except it describes how to download\r\nand install a binary application.\r\n\r\nCasks currently have three fields:\r\n\r\n * __url__: (required) points to binary distribution of the application\r\n * __version__: (required) describes the version of the application available at the URL\r\n * __homepage__: the same as Homebrew's - it doesn't do anything yet, but will be wired in\r\n\r\n# What's the status of this project?  Where's it headed?\r\n\r\nIt's really just a start at this point, but it works, and I've got big plans!\r\n\r\n`brew-cask` currently understands how to install `dmg` and `zip` files that\r\ncontain a `.app` file.  I'd like to extend it to be able to handle `pkg` files\r\nas well as the numerous other permutations of compression and distribution in\r\nthe wild (`.app` inside `dmg` inside `zip`; folder inside `dmg`; etc.).\r\n\r\nI plan to use the `Cask` model to allow per-project customization of behavior,\r\nlike Homebrew does with `Formula`.  This would allow weirdo applications like,\r\nsay, Eclipse (\"you really want me to drag that whole *folder* to\r\n`Applications`? ew.\") to contain their complexity.\r\n\r\nEach Cask will then encapsulate and automate the story of how a given\r\napplication should be installed.  If all goes well - I'm hoping to build up a\r\ncommunity-maintained collection of Casks that becomes the standard way that\r\nhackers install Mac apps.\r\n\r\n# Can I contribute?\r\n\r\n__Yes, yes, yes!__ Please fork/pull request to update Casks, to add features,\r\nto clean up documentation--anything at all that you can do to help out is very\r\nwelcome.\r\n\r\nIt's also __pretty darn easy__ to create Casks, so please build more of them\r\nfor the software you use. And if `brew-cask` doesn't support the packaging\r\nformat of your software, please open an issue and we can get it working\r\ntogether.\r\n\r\nThe whole idea is to build a _community-maintained_ list of easily installable\r\npackages, so the community part is important! Every little bit counts.\r\n\r\n# Alfred Integration\r\n\r\nI've been using Casks along with Alfred to great effect.  Just add\r\n`/usr/local/Cellar` as a Search Scope in Alfred's preferences, and then\r\napplications become available in Alfred immediately after a `brew cask\r\ninstall`.  Your fingertips will thank you.\r\n\r\nWith this setup, you don't actually need `brew cask linkapps` if you always\r\nopen your apps from Alfred. This means that everything stays nice and tidy.\r\n\r\nOh, and you can `brew cask install alfred` too! Not bad, eh?\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"homebrew-cask","tagline":"a friendly homebrew-style CLI workflow for the administration of Mac applications distributed as binaries"}